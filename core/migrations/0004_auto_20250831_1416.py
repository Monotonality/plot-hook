# Generated by Django 5.2.5 on 2025-08-31 14:16

from django.db import migrations
from django.utils.text import slugify


def generate_unique_slug(model_class, name, existing_slugs):
    """Generate a unique slug for a given name"""
    base_slug = slugify(name)
    slug = base_slug
    counter = 1
    
    while slug in existing_slugs:
        slug = f"{base_slug}-{counter}"
        counter += 1
    
    return slug


def create_slugs_for_worlds(apps, schema_editor):
    """Create slugs for existing worlds"""
    World = apps.get_model('core', 'World')
    existing_slugs = set()
    
    for world in World.objects.all():
        slug = generate_unique_slug(World, world.name, existing_slugs)
        world.slug = slug
        world.save()
        existing_slugs.add(slug)


def create_slugs_for_categories(apps, schema_editor):
    """Create slugs for existing categories"""
    Category = apps.get_model('core', 'Category')
    
    # Process categories by world to ensure uniqueness within each world
    for world in apps.get_model('core', 'World').objects.all():
        existing_slugs = set()
        
        for category in Category.objects.filter(world=world):
            slug = generate_unique_slug(Category, category.name, existing_slugs)
            category.slug = slug
            category.save()
            existing_slugs.add(slug)


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_alter_category_unique_together_category_slug_and_more'),
    ]

    operations = [
        migrations.RunPython(create_slugs_for_worlds, reverse_code=migrations.RunPython.noop),
        migrations.RunPython(create_slugs_for_categories, reverse_code=migrations.RunPython.noop),
    ]
